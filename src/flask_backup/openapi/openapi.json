{
  "openapi": "3.1.0",
  "info": { "title": "WhoKnows", "version": "0.1.0" },
  "paths": {
    "/": {
      "get": {
        "summary": "Serve Root Page",
        "operationId": "serve_root_page__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/weather": {
      "get": {
        "summary": "Serve Weather Page",
        "operationId": "serve_weather_page_weather_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/register": {
      "get": {
        "summary": "Serve Register Page",
        "operationId": "serve_register_page_register_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/login": {
      "get": {
        "summary": "Serve Login Page",
        "operationId": "serve_login_page_login_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/html": { "schema": { "type": "string" } } }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "summary": "Search",
        "operationId": "search_api_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Q" }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Language code (e.g., 'en')",
              "title": "Language"
            },
            "description": "Language code (e.g., 'en')"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SearchResponse" }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestValidationError"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/api/weather": {
      "get": {
        "summary": "Weather",
        "operationId": "weather_api_weather_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StandardResponse" }
              }
            }
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "summary": "Register",
        "operationId": "register_api_register_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_register_api_register_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login",
        "operationId": "login_api_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "get": {
        "summary": "Logout",
        "operationId": "logout_api_logout_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthResponse" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "properties": {
          "statusCode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Statuscode",
            "description": "HTTP status code"
          },
          "message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Message",
            "description": "Response message"
          }
        },
        "type": "object",
        "title": "AuthResponse"
      },
      "Body_login_api_login_post": {
        "properties": {
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login_api_login_post"
      },
      "Body_register_api_register_post": {
        "properties": {
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_register_api_register_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "RequestValidationError": {
        "properties": {
          "statusCode": {
            "type": "integer",
            "title": "Statuscode",
            "description": "HTTP status code. Defaulting to HTTP 422 Unprocessable Entity.",
            "default": 422
          },
          "message": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Message",
            "description": "Detail of the validation error"
          }
        },
        "type": "object",
        "title": "RequestValidationError"
      },
      "SearchResponse": {
        "properties": {
          "data": {
            "items": { "type": "object" },
            "type": "array",
            "title": "Data",
            "description": "List of data dictionaries with mixed types."
          }
        },
        "type": "object",
        "required": ["data"],
        "title": "SearchResponse"
      },
      "StandardResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Dictionary with mixed types."
          }
        },
        "type": "object",
        "required": ["data"],
        "title": "StandardResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
